UNCHECKED SO FAR:

pub fn wasmer::sys::Value::unwrap_i32(&self) -> i32
pub fn wasmer::sys::Value::unwrap_i64(&self) -> i64
pub fn wasmer::sys::Value::unwrap_v128(&self) -> u128
pub fn wasmer::sys::Value::v128(&self) -> Option<u128>
pub fn wasmer::sys::WasmPtr::add_offset(self, offset: <M as >::Offset) -> Result<Self, MemoryAccessError>
pub fn wasmer::sys::WasmPtr::cast<U>(self) -> WasmPtr<U, M>
pub fn wasmer::sys::WasmPtr::clone(&self) -> Self
pub fn wasmer::sys::WasmPtr::deref<'a>(self, view: &'a MemoryView<'_>) -> WasmRef<'a, T>
pub fn wasmer::sys::WasmPtr::eq(&self, other: &Self) -> bool
pub fn wasmer::sys::WasmPtr::fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result
pub fn wasmer::sys::WasmPtr::from_native(n: <Self as >::Native) -> Self
pub fn wasmer::sys::WasmPtr::is_null(self) -> bool
pub fn wasmer::sys::WasmPtr::new(offset: <M as >::Offset) -> Self
pub fn wasmer::sys::WasmPtr::null() -> Self
pub fn wasmer::sys::WasmPtr::offset(self) -> <M as >::Offset
pub fn wasmer::sys::WasmPtr::read(self, view: &MemoryView<'_>) -> Result<T, MemoryAccessError>
pub fn wasmer::sys::WasmPtr::read_until(self, view: &MemoryView<'_>, end: impl FnMut(&T) -> bool) -> Result<Vec<T>, MemoryAccessError>
pub fn wasmer::sys::WasmPtr::read_utf8_string(self, view: &MemoryView<'_>, len: <M as >::Offset) -> Result<String, MemoryAccessError>
pub fn wasmer::sys::WasmPtr::read_utf8_string_with_nul(self, view: &MemoryView<'_>) -> Result<String, MemoryAccessError>
pub fn wasmer::sys::WasmPtr::slice<'a>(self, view: &'a MemoryView<'_>, len: <M as >::Offset) -> Result<WasmSlice<'a, T>, MemoryAccessError>
pub fn wasmer::sys::WasmPtr::sub_offset(self, offset: <M as >::Offset) -> Result<Self, MemoryAccessError>
pub fn wasmer::sys::WasmPtr::to_native(self) -> <Self as >::Native
pub fn wasmer::sys::WasmPtr::write(self, view: &MemoryView<'_>, val: T) -> Result<(), MemoryAccessError>
pub fn wasmer::sys::WasmPtr::zero_padding_bytes(&self, _bytes: &mut [mem::MaybeUninit<u8>])
pub fn wasmer::sys::WasmRef::as_ptr32(self) -> WasmPtr<T, Memory32>
pub fn wasmer::sys::WasmRef::as_ptr64(self) -> WasmPtr<T, Memory64>
pub fn wasmer::sys::WasmRef::as_ptr<M: MemorySize>(self) -> WasmPtr<T, M>
pub fn wasmer::sys::WasmRef::clone(&self) -> WasmRef<'a, T>
pub fn wasmer::sys::WasmRef::fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result
pub fn wasmer::sys::WasmRef::new(view: &'a MemoryView<'_>, offset: u64) -> Self
pub fn wasmer::sys::WasmRef::offset(self) -> u64
pub fn wasmer::sys::WasmRef::read(self) -> Result<T, MemoryAccessError>
pub fn wasmer::sys::WasmRef::write(self, val: T) -> Result<(), MemoryAccessError>
pub fn wasmer::sys::WasmSlice::as_ptr32(self) -> WasmPtr<T, Memory32>
pub fn wasmer::sys::WasmSlice::as_ptr64(self) -> WasmPtr<T, Memory64>
pub fn wasmer::sys::WasmSlice::clone(&self) -> WasmSlice<'a, T>
pub fn wasmer::sys::WasmSlice::fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result
pub fn wasmer::sys::WasmSlice::index(self, idx: u64) -> WasmRef<'a, T>
pub fn wasmer::sys::WasmSlice::is_empty(self) -> bool
pub fn wasmer::sys::WasmSlice::iter(self) -> WasmSliceIter<'a, T>
pub fn wasmer::sys::WasmSlice::len(self) -> u64
pub fn wasmer::sys::WasmSlice::new(view: &'a MemoryView<'_>, offset: u64, len: u64) -> Result<Self, MemoryAccessError>
pub fn wasmer::sys::WasmSlice::offset(self) -> u64
pub fn wasmer::sys::WasmSlice::read(self, idx: u64) -> Result<T, MemoryAccessError>
pub fn wasmer::sys::WasmSlice::read_slice(self, buf: &mut [T]) -> Result<(), MemoryAccessError>
pub fn wasmer::sys::WasmSlice::read_slice_uninit(self, buf: &mut [MaybeUninit<T>]) -> Result<&mut [T], MemoryAccessError>
pub fn wasmer::sys::WasmSlice::read_to_vec(self) -> Result<Vec<T>, MemoryAccessError>
pub fn wasmer::sys::WasmSlice::subslice(self, range: Range<u64>) -> WasmSlice<'a, T>
pub fn wasmer::sys::WasmSlice::write(self, idx: u64, val: T) -> Result<(), MemoryAccessError>
pub fn wasmer::sys::WasmSlice::write_slice(self, data: &[T]) -> Result<(), MemoryAccessError>
pub fn wasmer::sys::WasmSliceIter::next(&mut self) -> Option<<Self as >::Item>
pub fn wasmer::sys::WasmSliceIter::next_back(&mut self) -> Option<<Self as >::Item>
pub fn wasmer::sys::WasmSliceIter::size_hint(&self) -> (usize, Option<usize>)
pub fn wasmer::sys::WasmTypeList::empty_array() -> <Self as >::Array
pub fn wasmer::sys::WasmTypeList::wasm_types() -> &'static [Type]
pub mod wasmer::sys
pub mod wasmer::sys::vm
pub struct field wasmer::sys::BaseTunables::dynamic_memory_offset_guard_size: u64
pub struct field wasmer::sys::BaseTunables::static_memory_bound: Pages
pub struct field wasmer::sys::BaseTunables::static_memory_offset_guard_size: u64
pub struct field wasmer::sys::Instance::exports: Exports
pub struct wasmer::sys::BaseTunables
pub struct wasmer::sys::Exports
pub struct wasmer::sys::ExportsIterator<'a, I> where I: Iterator<Item = (&'a String, &'a Extern)> + Sized
pub struct wasmer::sys::Function
pub struct wasmer::sys::FunctionEnvMut<'a, T: 'a>
pub struct wasmer::sys::Global
pub struct wasmer::sys::Imports
pub struct wasmer::sys::Instance
pub struct wasmer::sys::Memory
pub struct wasmer::sys::MemoryView<'a>
pub struct wasmer::sys::Module
pub struct wasmer::sys::Store
pub struct wasmer::sys::StoreMut<'a>
pub struct wasmer::sys::StoreRef<'a>
pub struct wasmer::sys::Table
pub struct wasmer::sys::TypedFunction<Args, Rets>
pub struct wasmer::sys::WasmRef<'a, T: ValueType>
pub struct wasmer::sys::WasmSlice<'a, T: ValueType>
pub struct wasmer::sys::WasmSliceIter<'a, T: ValueType>
pub trait wasmer::sys::AsStoreMut
pub trait wasmer::sys::AsStoreRef
pub trait wasmer::sys::CompilerConfig
pub trait wasmer::sys::Exportable<'a>
pub trait wasmer::sys::FunctionMiddleware
pub trait wasmer::sys::HostFunction<T, Args, Rets, Kind> where Args: WasmTypeList, Rets: WasmTypeList, Kind: HostFunctionKind
pub trait wasmer::sys::ModuleMiddleware
pub trait wasmer::sys::NativeWasmTypeInto
pub trait wasmer::sys::Tunables
pub trait wasmer::sys::WasmTypeList where Self: Sized
pub type wasmer::sys::Exports::IntoIter = IntoIter<String, Extern>
pub type wasmer::sys::Exports::Item = (String, Extern)
pub type wasmer::sys::ExportsIterator::Item = (&'a String, &'a Extern)
pub type wasmer::sys::ExternRef::Abi = usize
pub type wasmer::sys::FromToNativeWasmType::NativeNativeWasmTypeInto
pub type wasmer::sys::Function::Abi = usize
pub type wasmer::sys::NativeFunc<Args, Rets> = TypedFunction<Args, Rets>
pub type wasmer::sys::WasmPtr64<T> = WasmPtr<T, Memory64>
pub type wasmer::sys::WasmPtr::Native = <M as MemorySize>::Native
pub type wasmer::sys::WasmSliceIter::Item = WasmRef<'a, T>
pub type wasmer::sys::WasmTypeList::ArrayAsMut<[RawValue]>
pub type wasmer::sys::WasmTypeList::CStruct
pub unsafe fn wasmer::sys::BaseTunables::create_vm_memory(&self, ty: &MemoryType, style: &MemoryStyle, vm_definition_location: NonNull<VMMemoryDefinition>) -> Result<VMMemory, MemoryError>
pub unsafe fn wasmer::sys::BaseTunables::create_vm_table(&self, ty: &TableType, style: &TableStyle, vm_definition_location: NonNull<VMTableDefinition>) -> Result<VMTable, String>
pub unsafe fn wasmer::sys::Module::deserialize(store: &impl AsStoreRef, bytes: &[u8]) -> Result<Self, DeserializeError>
pub unsafe fn wasmer::sys::Module::deserialize_from_file(store: &impl AsStoreRef, path: impl AsRef<Path>) -> Result<Self, DeserializeError>
pub unsafe fn wasmer::sys::Module::from_binary_unchecked(store: &impl AsStoreRef, binary: &[u8]) -> Result<Self, CompileError>
pub unsafe fn wasmer::sys::NativeWasmTypeInto::from_raw(store: &mut impl AsStoreMut, raw: RawValue) -> Self
pub unsafe fn wasmer::sys::Value::from_raw(store: &mut impl AsStoreMut, ty: Type, raw: RawValue) -> Self
pub unsafe fn wasmer::sys::WasmTypeList::from_array(store: &mut impl AsStoreMut, array: <Self as >::Array) -> Self
pub unsafe fn wasmer::sys::WasmTypeList::from_c_struct(store: &mut impl AsStoreMut, c_struct: <Self as >::CStruct) -> Self
pub unsafe fn wasmer::sys::WasmTypeList::from_slice(store: &mut impl AsStoreMut, slice: &[RawValue]) -> Result<Self, TryFromSliceError>
pub unsafe fn wasmer::sys::WasmTypeList::into_array(self, store: &mut impl AsStoreMut) -> <Self as >::Array
pub unsafe fn wasmer::sys::WasmTypeList::into_c_struct(self, store: &mut impl AsStoreMut) -> <Self as >::CStruct
pub unsafe fn wasmer::sys::WasmTypeList::write_c_struct_to_ptr(c_struct: <Self as >::CStruct, ptr: *mut RawValue)
pub unsafe trait wasmer::sys::FromToNativeWasmType where Self: Sized
pub unsafe trait wasmer::sys::MemorySize
pub unsafe trait wasmer::sys::ValueType
pub use wasmer::sys::Architecture
pub use wasmer::sys::Artifact
pub use wasmer::sys::Bytes
pub use wasmer::sys::CallingConvention
pub use wasmer::sys::CompileError
pub use wasmer::sys::CpuFeature
pub use wasmer::sys::Cranelift
pub use wasmer::sys::CraneliftOptLevel
pub use wasmer::sys::DeserializeError
pub use wasmer::sys::Engine
pub use wasmer::sys::EngineBuilder
pub use wasmer::sys::ExportIndex
pub use wasmer::sys::ExportType
pub use wasmer::sys::ExternType
pub use wasmer::sys::Features
pub use wasmer::sys::FrameInfo
pub use wasmer::sys::FunctionType
pub use wasmer::sys::GlobalInit
pub use wasmer::sys::GlobalType
pub use wasmer::sys::HOST
pub use wasmer::sys::ImportType
pub use wasmer::sys::LinkError
pub use wasmer::sys::LocalFunctionIndex
pub use wasmer::sys::Memory32
pub use wasmer::sys::Memory64
pub use wasmer::sys::MemoryError
pub use wasmer::sys::MemoryType
pub use wasmer::sys::MiddlewareError
pub use wasmer::sys::MiddlewareReaderState
pub use wasmer::sys::Mutability
pub use wasmer::sys::OperatingSystem
pub use wasmer::sys::Pages
pub use wasmer::sys::ParseCpuFeatureError
pub use wasmer::sys::RuntimeError
pub use wasmer::sys::SerializeError
pub use wasmer::sys::TableType
pub use wasmer::sys::Target
pub use wasmer::sys::Triple
pub use wasmer::sys::Type
pub use wasmer::sys::ValueType
pub use wasmer::sys::WASM_MAX_PAGES
pub use wasmer::sys::WASM_MIN_PAGES
pub use wasmer::sys::WASM_PAGE_SIZE
pub use wasmer::sys::WasmError
pub use wasmer::sys::WasmResult
pub use wasmer::sys::is_wasm
pub use wasmer::sys::raise_user_trap
pub use wasmer::sys::vm::MemoryError
pub use wasmer::sys::vm::MemoryStyle
pub use wasmer::sys::vm::TableStyle
pub use wasmer::sys::vm::VMExtern
pub use wasmer::sys::vm::VMMemory
pub use wasmer::sys::vm::VMMemoryDefinition
pub use wasmer::sys::vm::VMTable
pub use wasmer::sys::vm::VMTableDefinition
pub use wasmer::sys::wasmparser
pub use wasmer::sys::wat2wasm