name: test-sys

on:
  push:
    branches:
      - '**'
      - '!master'
    pull_request:
        types: [ synchronize ]

env:
  RUST_BACKTRACE: 1

jobs:

  lint:
    name: Code lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          components: rustfmt, clippy
      - name: Install LLVM (Linux)
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz -L -o /opt/llvm.tar.xz
          mkdir -p /opt/llvm-12
          tar xf /opt/llvm.tar.xz --strip-components=1 -C /opt/llvm-12
          echo '/opt/llvm-12/bin' >> $GITHUB_PATH
          echo 'LLVM_SYS_120_PREFIX=/opt/llvm-12' >> $GITHUB_ENV
      - run: make lint
        env:
          ENABLE_CRANELIFT: "1"
          ENABLE_LLVM: "1"
          ENABLE_SINGLEPASS: "1"
      - name: Assert no files have changed
        run: |
          git status
          ! [[ $(git status -s) ]]

  cargo_deny:
    name: cargo-deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1

  test_nodejs:
    name: Test on NodeJS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-js
        run: |
          cargo xtaskci test-js-core
      - name: cargo xtask build-wasmer
        run: |
          cargo xtaskci test-js-core

  # build-wasmer: run build-wasmer and build-capi for every OS in parallel
  build_wasmer_linux_x64:
    name: cargo check on linux-x86_64-gnu
    runs-on: ubuntu-18.04
    env:
      TARGET: linux-x86_64-gnu
    steps: 
      - uses: actions/checkout@v3
      - name: Set up libstdc++ on Linux
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --allow-downgrades libstdc++6=8.4.0-1ubuntu1~18.04
          sudo apt-get install --reinstall g++-8
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-gnu
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-wasmer
        run: |
          cargo xtaskci build-wasmer

  build_wasmer_linux_musl:
    name: cargo check on linux-x86_64-musl
    runs-on: ubuntu-latest
    container: alpine:latest
    env:
      TARGET: linux-x86_64-musl
    steps: 
      - uses: actions/checkout@v3
      - name: Set up base deps on musl
        run: |
            apk add build-base bash musl-dev curl make libtool libffi-dev gcc automake autoconf git openssl-dev g++
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-wasmer
        run: |
          cargo xtaskci build-wasmer
  
  build_wasmer_macos_x86:
    name: build wasmer on macos-x86
    runs-on: macos-11
    env:
      TARGET: x86_64-apple-darwin
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-wasmer
        run: |
          cargo xtaskci build-wasmer

  build_wasmer_windows_x86:
    name: cargo check on windows-x64
    runs-on: windows-2019
    env:
      TARGET: windows-x86_64-msvc
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-wasmer
        run: |
          cargo xtaskci build-wasmer


  # build-capi: run build-capi for every OS, does NOT depend on build-wasmer
  # (can run in parallel with build-wasmer step)

  build_capi_linux_x64:
    name: build capi on linux-x86_64-gnu
    runs-on: ubuntu-18.04
    env:
      TARGET: linux-x86_64-gnu
    steps: 
      - uses: actions/checkout@v3
      - name: Set up libstdc++ on Linux
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --allow-downgrades libstdc++6=8.4.0-1ubuntu1~18.04
          sudo apt-get install --reinstall g++-8
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-gnu
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-capi
        run: |
          cargo xtaskci build-capi

  build_capi_linux_musl:
    name: build capi on linux-x86_64-musl
    runs-on: ubuntu-latest
    container: alpine:latest
    env:
      TARGET: linux-x86_64-musl
    steps: 
      - uses: actions/checkout@v3
      - name: Set up base deps on musl
        run: |
            apk add build-base bash musl-dev curl make libtool libffi-dev gcc automake autoconf git openssl-dev g++
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-capi
        run: |
          cargo xtaskci build-capi
  
  build_capi_macos_x86:
    name: build capi on macos-x86
    runs-on: macos-11
    env:
      TARGET: x86_64-apple-darwin
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-capi
        run: |
          cargo xtaskci build-capi

  build_capi_windows_x86:
    name: build capi on windows-x64
    runs-on: windows-2019
    env:
      TARGET: windows-x86_64-msvc
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask build-capi
        run: |
          cargo xtaskci build-capi

  # test-wasmer: run unit tests for wasmer, depends on build-wasmer step
  # (can run in parallel with build-capi step)
  test_wasmer_linux_x64:
    name: test wasmer on linux-x86_64-gnu
    runs-on: ubuntu-18.04
    needs: [build_wasmer_linux_x64]
    env:
      TARGET: linux-x86_64-gnu
    steps: 
      - uses: actions/checkout@v3
      - name: Set up libstdc++ on Linux
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --allow-downgrades libstdc++6=8.4.0-1ubuntu1~18.04
          sudo apt-get install --reinstall g++-8
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-gnu
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-wasmer
        run: |
          cargo xtaskci test-wasmer

  test_wasmer_linux_musl:
    name: test wasmer on linux-x86_64-musl
    runs-on: ubuntu-latest
    needs: [build_wasmer_linux_musl]
    container: alpine:latest
    env:
      TARGET: linux-x86_64-musl
    steps: 
      - uses: actions/checkout@v3
      - name: Set up base deps on musl
        run: |
            apk add build-base bash musl-dev curl make libtool libffi-dev gcc automake autoconf git openssl-dev g++
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-wasmer
        run: |
          cargo xtaskci test-wasmer
  
  test_wasmer_macos_x86:
    name: test wasmer on macos-x86
    runs-on: macos-11
    needs: [build_wasmer_macos_x86]
    env:
      TARGET: x86_64-apple-darwin
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-wasmer
        run: |
          cargo xtaskci test-wasmer

  test_wasmer_windows_x86:
    name: test wasmer on windows-x64
    runs-on: windows-2019
    needs: [build_wasmer_windows_x86]
    env:
      TARGET: windows-x86_64-msvc
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-wasmer
        run: |
          cargo xtaskci test-wasmer


  # test-capi: run unit test for capi, depends on build-capi step
  # (can run in parallel with build-wasmer step)
  test_capi_linux_x64:
    name: test capi on linux-x86_64-gnu
    runs-on: ubuntu-18.04
    needs: [build_capi_linux_x64]
    env:
      TARGET: linux-x86_64-gnu
    steps: 
      - uses: actions/checkout@v3
      - name: Set up libstdc++ on Linux
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --allow-downgrades libstdc++6=8.4.0-1ubuntu1~18.04
          sudo apt-get install --reinstall g++-8
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-gnu
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-capi
        run: |
          cargo xtaskci test-capi

  test_capi_linux_musl:
    name: test capi on linux-x86_64-musl
    runs-on: ubuntu-latest
    needs: [build_capi_linux_musl]
    container: alpine:latest
    env:
      TARGET: linux-x86_64-musl
    steps: 
      - uses: actions/checkout@v3
      - name: Set up base deps on musl
        run: |
            apk add build-base bash musl-dev curl make libtool libffi-dev gcc automake autoconf git openssl-dev g++
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-capi
        run: |
          cargo xtaskci test-capi
  
  test_capi_macos_x86:
    name: test capi on macos-x86
    runs-on: macos-11
    needs: [build_capi_macos_x86]
    env:
      TARGET: x86_64-apple-darwin
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-capi
        run: |
          cargo xtaskci test-capi

  test_capi_windows_x86:
    name: test capi on windows-x64
    runs-on: windows-2019
    needs: [build_capi_windows_x86]
    env:
      TARGET: windows-x86_64-msvc
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-capi
        run: |
          cargo xtaskci test-capi


  # test-integration-cli: run integration tests for wasmer, depends on build-capi and build-wasmer steps
  test_integration_linux_x64:
    name: integration tests on linux-x86_64-gnu
    runs-on: ubuntu-18.04
    needs: [build_wasmer_linux_x64, build_capi_linux_x64]
    env:
      TARGET: linux-x86_64-gnu
    steps: 
      - uses: actions/checkout@v3
      - name: Set up libstdc++ on Linux
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --allow-downgrades libstdc++6=8.4.0-1ubuntu1~18.04
          sudo apt-get install --reinstall g++-8
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-gnu
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-integration
        run: |
          cargo xtaskci test-integration

  test_integration_linux_musl:
    name: integration tests on linux-x86_64-musl
    runs-on: ubuntu-latest
    needs: [build_wasmer_linux_x64, build_capi_linux_musl]
    container: alpine:latest
    env:
      TARGET: linux-x86_64-musl
    steps: 
      - uses: actions/checkout@v3
      - name: Set up base deps on musl
        run: |
            apk add build-base bash musl-dev curl make libtool libffi-dev gcc automake autoconf git openssl-dev g++
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-integration
        run: |
          cargo xtaskci test-integration
  
  test_integration_macos_x86:
    name: integration tests on macos-x86
    runs-on: macos-11
    needs: [build_wasmer_linux_x64, build_capi_macos_x86]
    env:
      TARGET: x86_64-apple-darwin
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-integration
        run: |
          cargo xtaskci test-integration

  test_integration_windows_x86:
    name: integration tests on windows-x64
    runs-on: windows-2019
    needs: [build_wasmer_linux_x64, build_capi_windows_x86]
    env:
      TARGET: windows-x86_64-msvc
    steps: 
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.63
          target: x86_64-unknown-linux-musl
      - name: Install cargo xtask
        run: |
          cargo install cargo-xtask
      - name: cargo xtask test-integration
        run: |
          cargo xtaskci test-integration
