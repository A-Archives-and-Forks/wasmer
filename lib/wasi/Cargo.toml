[package]
name = "wasmer-wasi"
version = "3.0.2"
description = "WASI implementation library for Wasmer WebAssembly runtime"
categories = ["wasm", "os"]
keywords = ["wasm", "webassembly", "wasi", "sandbox", "ABI"]
authors = ["Wasmer Engineering Team <engineering@wasmer.io>"]
repository = "https://github.com/wasmerio/wasmer"
license = "MIT"
readme = "README.md"
edition = "2018"

[dependencies]
cfg-if = "1.0"
thiserror = "1"
generational-arena = { version = "0.2" }
tracing = "0.1"
getrandom = "0.2"
wasmer-wasi-types = { path = "../wasi-types", version = "=3.0.2" }
wasmer-types = { path = "../types", version = "=3.0.2", default-features = false }
wasmer = { path = "../api", version = "=3.0.2", default-features = false, features = ["wat", "js-serializable-module"] }
wasmer-vfs = { path = "../vfs", version = "=3.0.2", default-features = false, features = ["webc-fs"] }
wasmer-vbus = { path = "../vbus", version = "=3.0.2", default-features = false }
wasmer-vnet = { path = "../vnet", version = "=3.0.2", default-features = false }
wasmer-wasi-local-networking = { path = "../wasi-local-networking", version = "=3.0.2", default-features = false, optional = true }
typetag = { version = "0.1", optional = true }
serde = { version = "1.0", default-features = false, features = ["derive"] }
bincode = { version = "1.3", optional = true }
chrono = { version = "^0.4", default-features = false, features = [ "wasmbind", "std", "clock" ], optional = true }
derivative = { version = "^2" }
bytes = "1"
webc = { version = "3.0.1", default-features = false, features = ["std", "mmap"] }
serde_cbor = { version = "0.11.2", optional = true }
anyhow = { version = "1.0.66" }
wasmer-emscripten = { path = "../emscripten", version = "=3.0.2", optional = true }
lazy_static = "1.4"
sha2 = { version = "0.10" }
waker-fn = { version = "1.1" }
cooked-waker = "^5"
rand = "0.8"
tokio = { version = "1", features = [ "sync", "macros" ], default_features = false }
futures = { version = "0.3" }
# used by feature='os'
async-trait = { version = "^0.1" }
urlencoding = { version = "^2" }
serde_derive = { version = "^1" }
serde_json = { version = "^1" }
serde_yaml = { version = "^0.8" }
shellexpand = { version = "^2" }
weezl = { version = "^0.1" }
hex = { version = "^0.4" }
term_size = { version = "0.3", optional = true }
linked_hash_set = { version = "0.1" }
# used by feature='host-termios'
termios = { version = "0.3", optional = true }
# the various compilers
wasmer-compiler-cranelift = { version = "3.0.0-beta", path = "../compiler-cranelift", optional = true }
wasmer-compiler-llvm = { version = "3.0.0-beta", path = "../compiler-llvm", optional = true }
wasmer-compiler-singlepass = { version = "3.0.0-beta", path = "../compiler-singlepass", optional = true }
wasmer-compiler = { version = "3.0.0-beta", path = "../compiler", features = [ "translator" ], optional = true }
http = "0.2.8"

[dependencies.reqwest]
version = "0.11"
default-features = false
features = ["rustls-tls", "json"]
optional = true

[target.'cfg(unix)'.dependencies]
libc = { version = "^0.2", default-features = false }

[target.'cfg(windows)'.dependencies]
winapi = "0.3"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.74"

[dev-dependencies]
wasmer-compiler-cranelift = { version = "3.0.0-beta", path = "../compiler-cranelift" }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.0"
tracing-wasm = "0.2"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tracing-subscriber = { version = "^0.2" }

[features]
default = ["sys-default"]

webc_runner = ["serde_cbor", "wasmer/compiler", "wasmer/cranelift"]
webc_runner_rt_emscripten = ["wasmer-emscripten"]
webc_runner_rt_wasi = []

sys = ["wasmer/sys", "wasmer-wasi-types/sys", "webc/mmap"]
sys-default = ["wasmer/wat", "wasmer/compiler", "sys", "logging", "host-fs", "sys-poll", "sys-thread", "host-vnet", "host-threads", "host-reqwest" ]
sys-poll = []
sys-thread = ["tokio/rt", "tokio/time", "tokio/rt-multi-thread"]

compiler = [ "wasmer/compiler", "wasmer-compiler"]
compiler-cranelift = [ "wasmer-compiler-cranelift" ]
compiler-llvm = [ "wasmer-compiler-llvm" ]
compiler-singlepass = [ "wasmer-compiler-singlepass" ]

js = ["wasmer/js", "wasmer-vfs/no-time", "getrandom/js", "chrono", "wasmer-wasi-types/js"]
js-default = ["js", "wasmer/js-default"]
test-js = ["js", "wasmer/js-default", "wasmer/wat"]

host-vnet = [ "wasmer-wasi-local-networking" ]
host-threads = []
host-reqwest = ["reqwest"]
host-fs = ["wasmer-vfs/host-fs"]
host-termios = ["termios", "term_size"]

logging = ["tracing/log"]
disable-all-logging = [
    "tracing/release_max_level_off",
    "tracing/max_level_off"
]
enable-serde = [
    "typetag",
    "bincode",
    "wasmer-vfs/enable-serde",
    "generational-arena/serde",
    "wasmer-wasi-types/enable-serde",
]
